name: Build and Deploy Code to Heroku

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  # Build the project and run tests
  build-job:
    environment:
      name: testing
    env:
      PORT : ${{secrets.PORT}}
      MONGODB_CONNECTION_URL : ${{secrets.MONGODB_CONNECTION_URL}}
      SENDGRID_API_KEY : ${{secrets.SENDGRID_API_KEY}}
      FROM_EMAIL : ${{secrets.FROM_EMAIL}}
      JWT_SECRET_KEY : ${{secrets.JWT_SECRET_KEY}}
      JWT_ALGORITHM : ${{secrets.JWT_ALGORITHM}}
      JWT_ACCESS_TOKEN_EXPIRES_IN : ${{secrets.JWT_ACCESS_TOKEN_EXPIRES_IN}}
      EMAIL_FUNCTIONALITY_ENABLED : ${{secrets.EMAIL_FUNCTIONALITY_ENABLED}}
    services:
      mongo:
        image: mongo:5.0.7
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{secrets.DATABASE_ROOT_USERNAME}}
          MONGO_INITDB_ROOT_PASSWORD: ${{secrets.DATABASE_ROOT_PASSWORD}}
        ports:
          - 27017:27017
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '17'
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Run Tests
      run: npm test

    # Docker Hub Login  
    - name: "Log in to Docker Hub"
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

    # Setup Docker Buildx
    - name: "Set up Docker Buildx"
      id: buildx
      uses: docker/setup-buildx-action@v1

    # Build and push Docker image
    - name: "Build and push Docker image"
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        builder: ${{steps.buildx.outputs.name}}
        push: true
        tags: ${{secrets.DOCKER_HUB_USERNAME}}/node-task-manager-app:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: "Docker Image digest"
      run: echo ${{steps.docker_build.outputs.digest}}
  
  # Deploy to Heroku job
  deploy:
    runs-on: ubuntu-latest
    needs: [build-job]
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
